name: Release library from tag

env:
  LIBRARY_MODULE: config-provider-library
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  GITHUB_ACTOR: ${{ secrets.CI_BOT_USERNAME }}
  GITHUB_TOKEN: ${{ secrets.CI_BOT_PAT }}
  GITHUB_ACTOR_AEVI: ${{ secrets.AEVI_GH_USERNAME }}
  GITHUB_TOKEN_AEVI: ${{ secrets.AEVI_GH_TOKEN }}

on:
  push:
    tags:
      # <major.minor.patch>, example: 1.0.0
      - '[0-9]+.[0-9]+.[0-9]+'
      # <major.minor.patch-<tag>.<number>>, example: 1.0.0-RC.1, 1.0.0-alpha.2, 1.0.0-beta.14
      - '[0-9]+.[0-9]+.[0-9]+-*.[0-9]+'

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache Gradle Dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: zulu
          java-version: 11

      - name: Extract tag from ref
        # ref is refs/tag/<tag> - split by / and retrieve the 3rd element
        run: echo "TAG=$(echo $GITHUB_REF | cut -d / -f 3)" >> $GITHUB_ENV

      - name: Extract semver details from final release tag
        if: contains(env.TAG, '-') != true
        run: |
          echo "VERSION_MAJOR=$(echo $TAG | cut -d . -f 1)" >> $GITHUB_ENV
          echo "VERSION_MINOR=$(echo $TAG | cut -d . -f 2)" >> $GITHUB_ENV
          echo "VERSION_PATCH=$(echo $TAG | cut -d . -f 3)" >> $GITHUB_ENV
          echo "PRE_RELEASE=false" >> $GITHUB_ENV

      - name: Extract semver details from pre-release tag
        if: contains(env.TAG, '-')
        run: |
          echo "VERSION_MAJOR=$(echo $TAG | cut -d - -f 1 | cut -d . -f 1)" >> $GITHUB_ENV
          echo "VERSION_MINOR=$(echo $TAG | cut -d - -f 1 | cut -d . -f 2)" >> $GITHUB_ENV
          echo "VERSION_PATCH=$(echo $TAG | cut -d - -f 1 | cut -d . -f 3)" >> $GITHUB_ENV
          echo "VERSION_SUFFIX=-$(echo $TAG | cut -d - -f 2)" >> $GITHUB_ENV
          echo "PRE_RELEASE=true" >> $GITHUB_ENV

      - name: Log info
        run: echo "Version is $VERSION_MAJOR.$VERSION_MINOR.$VERSION_PATCH$VERSION_SUFFIX"

      - name: Verify that tag major.minor.patch from tag matches what is in gradle.properties
        run: |
          ./gradlew verifyTagVersionMatchesGradleProperties \
          -Ptag_version_major=${{env.VERSION_MAJOR}} \
          -Ptag_version_minor=${{env.VERSION_MINOR}} \
          -Ptag_version_patch=${{env.VERSION_PATCH}} \

      - name: Create github release and upload libs
        id: create-release
        uses: softprops/action-gh-release@v1
        with:
          name: Version ${{env.TAG}}
          body: See [CHANGELOG](https://github.com/${{github.repository}}/blob/${{env.TAG}}/CHANGELOG.md) for release notes.
          prerelease: ${{env.PRE_RELEASE}}
          files: |
            ${{ env.LIBRARY_MODULE }}/build/outputs/aar/*release*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish final release versions to Maven Central
        if: contains(env.TAG, '-') != true
        run: |
          ./gradlew assembleRelease publishLibraryPublicationToSonatypeRepository closeAndReleaseSonatypeStagingRepository \
          -Pversion_major=${{env.VERSION_MAJOR}} \
          -Pversion_minor=${{env.VERSION_MINOR}} \
          -Pversion_patch=${{env.VERSION_PATCH}} \
          -Pversion_suffix=${{env.VERSION_SUFFIX}} \
          -Pversion_build_counter=${{env.VERSION_BUILD_NUMBER}} \
        env:
          MVN_CENTRAL_USERNAME: ${{ secrets.MVN_CENTRAL_USERNAME }}
          MVN_CENTRAL_PASSWORD: ${{ secrets.MVN_CENTRAL_PASSWORD }}
          MVN_CENTRAL_PGP_KEY_ID: ${{ secrets.MVN_CENTRAL_PGP_KEY_ID }}
          MVN_CENTRAL_PGP_PRIVATE_KEY: ${{ secrets.MVN_CENTRAL_PGP_PRIVATE_KEY }}
          MVN_CENTRAL_PGP_PASSWORD: ${{ secrets.MVN_CENTRAL_PGP_PASSWORD }}
          MVN_CENTRAL_STAGING_PROFILE_ID: ${{ secrets.MVN_CENTRAL_STAGING_PROFILE_ID }}

      - name: Increment app version patch and suffix if final version was released
        if: contains(env.TAG, '-') != true
        run: |
          git checkout -- .
          ./gradlew prepareForNextRelease

      - name: Create Pull Request to prepare for next release if final version was released
        if: contains(env.TAG, '-') != true
        uses: peter-evans/create-pull-request@v3
        with:
          commit-message: Prepare for next release
          title: Prepare for next release
          body: Prepare for next release
          branch: feature/prepare-for-next-release-from-${{env.TAG}}
          base: main
          delete-branch: true
