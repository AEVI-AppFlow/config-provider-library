apply plugin: 'com.android.library'
apply plugin: 'com.jakewharton.butterknife'

apply from: gradleScript('lib/versioning.gradle')
apply from: gradleScript('publish/publishing-utils.gradle')
apply from: gradleScript('android/basic-library.gradle')

group = 'com.aevi.sdk.pos.flow.config'
version = libraryVersion
description = 'config-provider-library'

publishingUtils?.publication {
    groupId group
    artifactId project.name
    version libraryVersion
}

apply from: '../dependencies.gradle'

apply from: gradleScript('publish/publish-maven-central.gradle')

android {
    defaultConfig {
        buildConfigField("String", "NAME", "\"${project.name}\"")
        buildConfigField("String", "VERSION", "\"${libraryVersion}\"")
        buildConfigField("long", "BUILD_TIME", "${System.currentTimeMillis()}L")
    }
}

dependencies {
    implementation domainDependencies.appFlowApi
    implementation domainDependencies.appFlowServiceApi
    implementation domainDependencies.appFlowConstants
    implementation domainDependencies.appFlowAppManagement
    implementation domainDependencies.configApi
    implementation domainDependencies.appFlowBaseApi
    implementation domainDependencies.rxMessenger
    implementation domainDependencies.jsonConverter

    implementation presentationDependencies.design
    implementation presentationDependencies.appCompat
    implementation presentationDependencies.recyclerView

    // for reasons I don't understand these need to be exposed to users of this library to
    // avoid class not found errors. These need to be removed/replaced with something more
    // standard from Androidx UI
    api presentationDependencies.flexibleAdapter
    api presentationDependencies.flexibleAdapterUi

    implementation presentationDependencies.butterKnife
    annotationProcessor aptDependencies.butterKnife

    implementation domainDependencies.dagger
    annotationProcessor aptDependencies.dagger

    implementation domainDependencies.rxJava
    implementation domainDependencies.rxAndroid
    implementation domainDependencies.okio
    implementation domainDependencies.gson

    testImplementation testDependencies.junit

}